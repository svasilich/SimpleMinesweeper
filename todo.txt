- Клетка должна сама отвечать за действия при её нажатии.
	+- При установке флага для клетки в состоянии NotOpened состояние должно стать Flaged.
	+- Если состояние отлично от NotOpened и Flagged, не должно произойти ничего.
	+- Если состояние Flagged, состояние должно стать NotOpened.
	+- При открытии, если клетка заминирована, должно быть состояние BlownUpped.
	+- При открытии, если клетка не заминирована, должно быть состояние Opened.
	+- Клетка должна уведомлять об изменении состояния, сообщять какое состояние теперь.
	+- При открытии, если состояние отлично от NotOpened не должно произойти ничего.
	+- Если игра завершена, при открытии не должно происходить ничего.
	+- Если игра завершена, при установке флага не должно происходить ничего.
	+- При открытии или изменении флага клетка должна уведомлять об этом.
	+- При открытии клетка должна запросить инфу о своём окружении.

+- Минное поле должно работать с новой клеткой.
	+- Поле должно уметь считать сколько мин вокруг указанной.
	+- При первом нажатии состояние должно стать InGame.
	+- При первом нажатии не должно быть взрыва. Мина должна быть перенесена.
	+- Если мина взорвалась, состояние должно стать GameOver.
	+- В Minefield нужно передавать фабрику клеток. Сейчас тестирование не модульное.
	+- Если мина взорвалась, все клетки должны стать открытыми:
		+- клетки с минами должны получть состояние NoFindedMine;
		+- клетки с ошибочными флагами должны получить состояние WrongFlag.
	+- Если открыты все пустые клетки и не взорвано ни одной мины, состояние должно стать Win.
	+- После заполнения поля его состояние должно стать NotStarted.
	+- Если вокруг открываемой клетки нет ни одной мины, её соседи должны стать открытыми.

+- Если состояние не InGame или NotStarted" игрок не может открыть клетку.
+- Если состояние не InGame или NotStarted игрок не может установить флаг.
+- Если первым нажатием была установка флажка, состояние должно стать InGame.

+- Нарисовать тестовые картинки состояний.
+- Добавить картинки вместо состояний.
+- Масштабирование контролов. Кнопки должны быть квадратными.

Таймер.
	+- Класс таймера.
	+- Поле таймера должно возвращать 0, если объект таймера не установлен.
	+- Поле таймера должно возвращать время объекта таймера, если этот объект установлен.
	+- Форматирование строки таймера должно осуществляться с помощью конвертера:
		+- для 0 секунд значение "00:00";
		+- для 60 секунд значение "01:00";
		+- для 99 минут 59 секунд значение "99:59";
		+- для 100 минут значение "100:00";
		+- больше 999 минут 59 секунд значение 999:59;
	+- Объект таймера должен уметь сбрасываться.
	+- Объект таймера должен устанавливаться при создании класса.
	+- Объект таймера должен оставаться после остановки.

Вывод количечтва оставшихся мин (По сути - подсчёт флажков).
	+- Добавить информацию о количестве мин.
	+- Добавить информацию о количестве флажков.
	+- Если флажок установлен, количество должно вырасти на 1.
	+- Если флажок сброшен, количество должно уменьшиться на 1.
	+- Добавить событие, сообщающее об изменении количества флажков.
	+- Добавить соответствующее поле в UI.
	+- Добавить обработку изменения количества флажков в модель представления.
	+- Отображать количество мин.	
	+- Добавить настройки цвета шрифат в табло.
	+- Подобрать цвета для количества мин.

+- Подобрать нормальный цвет для 6. Этот совершенно не видно на белом фоне.

+- Мордочка для состояний кнопки. Можно сделать растровой.
	+- Gif-ка для состояния в игре.
	+- Png для состояния "Не начато", "Выигрыш" и "Проигрыш".

- MineFieldViewModel
	- Не хватает окошка настройки.

------
Переосмыслим модель.
- Создать класс Game, который будет предоставлять поле, настройки и рекорды.
	+- Класс должен уметь запускать поле с заданными параметрами.
		+- Добавить в поле информацию о текущих настройках.
			+- SetSettings.
		+- Добавить метод для запуска игры без параметров.
		+- Убрать из публичного интерфейса метод для запуска игры с параметрами.
		+- Проверку правильности параметров поля нужно вынести куда-то.
			+- Создать статический класс SettingsHelper.
			+- Перенести в него метод проверки валидности настроек.
			+- Убрать метод проверки валидности настроек из Minefield.
		+- Создать интерфейс IGame.
		+- Создать класс Game, реализующий интерфейс IGame.

- Создавать экземпляр класса Game на запуске главного окна. Сделать для него ViewModel.
	+- Добавить к ISettingsManager событие, сообщающее что изменился текущий тип игры либо параметры игры (если выбрано Custom).
	+- При срабатывании этого события нужно задавать внутреннему IMinefield новую настройку.
	+- При задании новой настроки игрового поля его нужно перезаполнять.

- GameViewModel
	- Команда для включения разных режимов игры.

------
+- Вынести игровое поле на Page.
+- Перезагружать поле по нажатию на пункт меню с соответствующим типом игры.
+- Открывать страницу настроек по команде из меню.
*- Созать страницу настроек.
- Возвращаться на страницу с игрой.
- Как дать странице доступ к своему ViewModel?
------

- Нужно понять, почему загрузка выполняестя так долго.
- Нужно чтобы при взрыве клетки открывались по одной и это было видно.
- Нужно чтобы открытые клетки после взрыва оставались с серым фоном.

